"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import document_read as shared_document_read
from ..shared import document_write as shared_document_write
from contractifyproduction import utils
from dataclasses_json import Undefined, dataclass_json
from typing import Optional


@dataclasses.dataclass
class UpdateDocumentRequest:
    company: int = dataclasses.field(metadata={'path_param': { 'field_name': 'company', 'style': 'simple', 'explode': False }})
    r"""Id of the company"""
    document: int = dataclasses.field(metadata={'path_param': { 'field_name': 'document', 'style': 'simple', 'explode': False }})
    r"""Id of the document"""
    document_write: Optional[shared_document_write.DocumentWrite] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateDocument404ApplicationJSON:
    r"""Not Found"""
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateDocument403ApplicationJSON:
    r"""Forbidden"""
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateDocument401ApplicationJSON:
    r"""Unauthenticated"""
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateDocument200ApplicationJSON:
    r"""OK"""
    data: Optional[shared_document_read.DocumentRead] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data'), 'exclude': lambda f: f is None }})
    



@dataclasses.dataclass
class UpdateDocumentResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    r"""Raw HTTP response; suitable for custom response parsing"""
    update_document_200_application_json_object: Optional[UpdateDocument200ApplicationJSON] = dataclasses.field(default=None)
    r"""OK"""
    update_document_401_application_json_object: Optional[UpdateDocument401ApplicationJSON] = dataclasses.field(default=None)
    r"""Unauthenticated"""
    update_document_403_application_json_object: Optional[UpdateDocument403ApplicationJSON] = dataclasses.field(default=None)
    r"""Forbidden"""
    update_document_404_application_json_object: Optional[UpdateDocument404ApplicationJSON] = dataclasses.field(default=None)
    r"""Not Found"""
    

