"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.shared import document_collection as shared_document_collection
from datetime import datetime
from enum import Enum
from typing import Optional

class EsigningStatus(str, Enum):
    r"""Return documents currently having this status in the eSigning process, can be comma separated"""
    NOT_SENT = 'not_sent'
    SENT_TO_LEGAL = 'sent_to_legal'
    LEGAL_DECLINED = 'legal_declined'
    SENT = 'sent'
    SIGNED = 'signed'
    REJECTED_BY_SIGNER = 'rejected_by_signer'
    FINISHED_BUT_PARTIALLY_SIGNED = 'finished_but_partially_signed'
    REVOKED = 'revoked'


@dataclasses.dataclass
class ListDocumentsRequest:
    company: int = dataclasses.field(metadata={'path_param': { 'field_name': 'company', 'style': 'simple', 'explode': False }})
    r"""Id of the company"""
    esigning_status: Optional[EsigningStatus] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'esigning_status', 'style': 'form', 'explode': True }})
    r"""Return documents currently having this status in the eSigning process, can be comma separated"""
    esigning_updated_after: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'esigning_updated_after', 'style': 'form', 'explode': True }})
    r"""Return documents where e-signing was updated after the given date"""
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""The page to retrieve"""
    relation_id: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'relation_id', 'style': 'form', 'explode': True }})
    r"""Return documents linked to a relation"""
    signed_after: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'signed_after', 'style': 'form', 'explode': True }})
    r"""Return documents e-signed after the given date"""
    



@dataclasses.dataclass
class ListDocumentsResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    document_collection: Optional[shared_document_collection.DocumentCollection] = dataclasses.field(default=None)
    r"""OK"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    r"""Raw HTTP response; suitable for custom response parsing"""
    

